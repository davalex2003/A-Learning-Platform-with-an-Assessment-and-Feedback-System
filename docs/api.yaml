openapi: 3.1.0

info:
    title: Learning Platform External Api
    description: HTTP endpoints for external api
    version: '1.0'

paths:
    /api/admin/create:
        post:
            description: Создание админа
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminCreateRequest'
            responses:
                200:
                    description: OK
                404:
                    description: Организация не найдена

    /api/admin/user/list:
        get:
            description: Получение списка пользователей для администратора
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminUserListResponse200'
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
    
    /api/admin/user/role:
        put:
            description: Изменение роли пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutUserRoleRequest'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация или пользователь не найдены

    /api/admin/user:
        delete:
            description: Удаление пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/UserID'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация или пользователь не найдены
    
    /api/admin/course/list:
        get:
            description: Получение списка курсов
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CourseListResponse200'
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /api/admin/course:
        put:
            description: Редактирование курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CourseModel'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
        delete:
            description: Удаление курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /api/user/register:
        post:
            description: Регистрация пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserRegisterRequest'
            responses:
                201:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserRegisterResponse201'
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserRegisterResponse400'

    /api/user/authorize:
        post:
            description: Авторизация пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAuthorizeRequest'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAuthorizeResponse200'
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAuthorizeResponse400' 
                404:
                    description: Пользователь не найден                         

    /api/user/email/send_verification_code:
        post:
            description: Отправить код на email
            parameters:
              - $ref: '#/components/parameters/Email'
            responses:
                200:
                    description: OK
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserEmailSendVerificationCodeResponse400'

    /api/user/email/verify:
        post:
            description: Подтвердить email
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserEmailVerifyRequest'
            responses:
                200:
                    description: OK
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserEmailSendVerificationCodeResponse400'

    /api/user/info:
        get:
            description: Получить информацию о пользователе
            parameters:
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/OrganizationID'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResponse200'
                404:
                    description: Пользователь не найден

    /course/teacher:
        post:
            description: Создание курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CourseModel'
            responses:
                201:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CourseCreateResponse201'
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
        put:
            description: Редактирование курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CourseModel'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
        delete:
            description: Удаление курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
    
    /course/list:
        get:
            description: Получение списка курсов
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CourseListResponse200'
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /course/additions:
        get:
            description: Получение списка материалов и ссылок
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CourseAdditionsResponse200'
                404:
                    description: Организация не найдена
        delete:
            description: Удаление материала или ссылки
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
              - $ref: '#/components/parameters/AdditionID'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /course/teacher/additions/link:
        post:
            description: Добавление ссылки в дополнения курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CourseAdditionsLinkRequest'
            responses:
                201:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
    
    /course/additions/material:
        get:
            description: Скачивание материала курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
              - $ref: '#/components/parameters/AdditionID'
            responses:
                200:
                    description: OK
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: binary
                404:
                    description: Организация не найдена
        post:
            description: Добавление материала курса
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - file
                            properties:
                                file:
                                    type: string
                                    format: binary

    /course/student/add:
        post:
            description: Запись студента на курс
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/CourseID'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация или курс не найдены

components:
    parameters:
        OrganizationID:
            in: query
            name: organization_id
            description: ID организации
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        Token:
            in: query
            type: object
            name: token
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        CourseID:
            in: query
            type: object
            name: course_id
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        UserID:
            in: query
            type: object
            name: user_id
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        Email:
            in: query
            name: email
            description: Электронная почта
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

    schemas:
        NotEmptyString:
            type: string
            minLength: 1

        FullName:
            type: object
            required:
              - first_name
              - second_name
            properties:
                first_name:
                    description: Имя
                    $ref: '#/components/schemas/NotEmptyString'
                second_name:
                    description: Фамилия
                    $ref: '#/components/schemas/NotEmptyString'
                middle_name:
                    description: Отчество
                    $ref: '#/components/schemas/NotEmptyString'

        AdminCreateRequest:
            type: object
            required:
              - email
              - password
              - full_name
            properties:            
                email:
                    $ref: '#/components/schemas/NotEmptyString'
                password:
                    type: string
                    minLength: 8
                full_name:
                    $ref: '#/components/schemas/FullName'

        UserRole:
            type: string
            enum:
              - student
              - teacher
              - admin

        User:
            type: object
            required:
              - id
              - full_name
              - email
              - role
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                full_name:
                    $ref: '#/components/schemas/FullName'
                email:
                    $ref: '#/components/schemas/NotEmptyString'
                role:
                    $ref: '#/components/schemas/UserRole'

        Course:
            type: object
            required:
              - id
              - name
              - description
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                name:
                    $ref: '#/components/schemas/NotEmptyString'
                description:
                    $ref: '#/components/schemas/NotEmptyString'

        AdminUserListResponse200:
            type: array
            items:
                $ref: '#/components/schemas/User'
            minItems: 1
        
        PutUserRoleRequest:
            type: object
            required:
              - id
              - role
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                role:
                    $ref: '#/components/schemas/UserRole'
        
        CourseListResponse200:
            type: array
            items:
                $ref: '#/components/schemas/Course'

        CourseModel:
            type: object
            required:
              - name
              - description
            properties:
                name:
                    $ref: '#/components/schemas/NotEmptyString'
                description:
                    $ref: '#/components/schemas/NotEmptyString'

        UserRegisterRequest:
            type: object
            required:
              - email
              - password
              - full_name
            properties:            
                email:
                    $ref: '#/components/schemas/NotEmptyString'
                password:
                    type: string
                    minLength: 8
                full_name:
                    $ref: '#/components/schemas/FullName'
        
        UserRegisterResponse201:
            type: object
            required:
              - token
            properties:
                token:
                    $ref: '#/components/schemas/Token'

        UserRegisterResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_exists
                      - invalid_email
                      - invalid_password
                      - invalid_first_name
                      - invalid_second_name
                      - invalid_middle_name

        UserAuthorizeRequest:
            type: object
            required:
              - email
              - password
            properties:            
                email:
                    $ref: '#/components/schemas/NotEmptyString'
                password:
                    type: string
                    minLength: 8
        
        UserAuthorizeResponse200:
            type: object
            required:
              - token
              - role
              - full_name
              - email
            properties:
                token:
                    $ref: '#/components/schemas/Token'
                role:
                    $ref: '#/components/schemas/UserRole'
                full_name:
                    $ref: '#/components/schemas/FullName'
                email:
                    $ref: '#/components/schemas/NotEmptyString'

        UserAuthorizeResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - invalid_email
                      - invalid_password
                      - wrong_password
        
        UserEmailSendVerificationCodeResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_has_verified_email
                      - invalid_email
        
        UserEmailVerifyRequest:
            type: object
            required:
              - token
              - code
              - email
            properties:
                token:
                    $ref: '#/components/schemas/Token'
                code:
                    type: string
                    minLength: 6
                    maxLength: 6
                email:
                    $ref: '#/components/schemas/NotEmptyString'

        UserEmailVerifyResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_has_verified_email
                      - invalid_token
                      - invalid_code

        UserInfoResponse200:
            type: object
            required:
              - role
              - full_name
              - email
            properties:
                role:
                    $ref: '#/components/schemas/UserRole'
                full_name:
                    $ref: '#/components/schemas/FullName'
                email:
                    $ref: '#/components/schemas/NotEmptyString'

        Addition:
            type: object
            required:
              - id
              - name
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                name:
                    $ref: '#/components/schemas/NotEmptyString'
        
        CourseCreateResponse201:
            type: object
            required:
              - course_id
            properties:
                course_id:
                    $ref: '#/components/schemas/NotEmptyString'
        
        CourseAdditionsResponse200:
            type: object
            required:
              - materials
              - links
            properties:
                materials:
                    type: array
                    items:
                        $ref: '#/components/schemas/Addition'
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/Addition'

        CourseAdditionsLinkRequest:
            type: object
            required:
              - link
            properties:
                link:
                    $ref: '#/components/schemas/NotEmptyString'