openapi: 3.1.0

info:
    title: Learning Platform Admin
    description: HTTP endpoints for admins
    version: '1.0'

paths:
    /admin/user/list:
        get:
            description: Получение списка пользователей для администратора
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminUserListResponse200'
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
    
    /admin/user/role:
        put:
            description: Изменение роли пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutUserRoleRequest'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация или пользователь не найдены

components:
    parameters:
        OrganizationID:
            in: query
            name: organization_id
            description: ID организации
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        Token:
            in: query
            type: object
            name: token
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

    schemas:
        NotEmptyString:
            type: string
            minLength: 1

        FullName:
            type: object
            required:
              - first_name
              - second_name
            properties:
                first_name:
                    description: Имя
                    $ref: '#/components/schemas/NotEmptyString'
                second_name:
                    description: Фамилия
                    $ref: '#/components/schemas/NotEmptyString'
                middle_name:
                    description: Отчество
                    $ref: '#/components/schemas/NotEmptyString'
        
        UserRole:
            type: string
            enum:
              - student
              - teacher
              - admin

        User:
            type: object
            required:
              - id
              - full_name
              - email
              - role
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                full_name:
                    $ref: '#/components/schemas/FullName'
                email:
                    $ref: '#/components/schemas/NotEmptyString'
                role:
                    $ref: '#/components/schemas/UserRole'

        AdminUserListResponse200:
            type: array
            items:
                $ref: '#/components/schemas/User'
            minItems: 1
        
        PutUserRoleRequest:
            type: object
            required:
              - id
              - role
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                role:
                    $ref: '#/components/schemas/UserRole'
