openapi: 3.1.0

info:
    title: Learning Platform Tasks
    description: HTTP endpoints for tasks
    version: '1.0'

paths:
    /task/teacher:
        post:
            description: Создание таски
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskModel'
            responses:
                201:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskCreateResponse201'
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена
        delete:
            description: Удаление таски
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/TaskID'
            responses:
                200:
                    description: OK
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/teacher/add-file:
        post:
            description: Добавление файла к таске
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/TaskID'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - file
                            properties:
                                file:
                                    type: string
                                    format: binary
            responses:
                201:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/list:
        get:
            description: Получить список тасок в задании
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskListResponse200'
                401:
                    description: Unauthorized
                404:
                    description: Организация или задание не найдены

    /task/question/file:
        get:
            description: Загрузка файла из таски
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/TaskID'
            responses:
                200:
                    description: OK
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: binary
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/student/answer/text:
        post:
            description: Ответ на таску текстом
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
              - $ref: '#/components/parameters/TaskID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AnswerTextPostRequest'
            responses:
                201:
                    description: OK
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/student/answer/file:
        post:
            description: Ответ на таску файлом
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
              - $ref: '#/components/parameters/TaskID'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - file
                            properties:
                                file:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: OK
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/teacher/evaluate:
        post:
            description: Оценить таску
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
              - $ref: '#/components/parameters/TaskID'
              - $ref: '#/components/parameters/UserID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskEvaluateRequest'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/teacher/feedback:
        post:
            description: Обратная связь к таске
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
              - $ref: '#/components/parameters/TaskID'
              - $ref: '#/components/parameters/UserID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskFeedbackRequest'
            responses:
                200:
                    description: OK
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

    /task/teacher/answer/file:
        get:
            description: Обратная связь к таске
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
              - $ref: '#/components/parameters/Token'
              - $ref: '#/components/parameters/AssignmentID'
              - $ref: '#/components/parameters/TaskID'
              - $ref: '#/components/parameters/UserID'
            responses:
                200:
                    description: OK
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: binary
                401:
                    description: Unauthorized
                404:
                    description: Организация не найдена

components:
    parameters:
        OrganizationID:
            in: query
            name: organization_id
            description: ID организации
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        Token:
            in: query
            type: object
            name: token
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        AssignmentID:
            in: query
            type: object
            name: assignment_id
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        TaskID:
            in: query
            type: object
            name: assignment_id
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

        UserID:
            in: query
            type: object
            name: user_id
            required: true
            schema:
                $ref: '#/components/schemas/NotEmptyString'

    schemas:
        NotEmptyString:
            type: string
            minLength: 1

        TaskModel:
            type: object
            required:
              - question_type
              - answer_type
            properties:
                question_type:
                    type: string
                    enum:
                      - text
                      - file
                question_text:
                    $ref: '#/components/schemas/NotEmptyString'
                answer_type:
                    type: string
                    enum:
                      - text
                      - file
                      - variants
                answer_variants:
                    type: array
                    items:
                        $ref: '#/components/schemas/NotEmptyString'
                    minItems: 1

        TaskCreateResponse201:
            type: object
            required:
              - task_id
            properties:
                task_id:
                    $ref: '#/components/schemas/NotEmptyString'

        Task:
            type: object
            required:
              - id
              - question_type
              - answer_type
            properties:
                id:
                    $ref: '#/components/schemas/NotEmptyString'
                question_type:
                    type: string
                    enum:
                      - text
                      - file
                question_text:
                    $ref: '#/components/schemas/NotEmptyString'
                question_file:
                    $ref: '#/components/schemas/NotEmptyString'
                answer_type:
                    type: string
                    enum:
                      - text
                      - file
                      - variants
                answer_variants:
                    type: array
                    items:
                        $ref: '#/components/schemas/NotEmptyString'
                    minItems: 1

        TaskListResponse200:
            type: array
            items:
                $ref: '#/components/schemas/Task'

        AnswerTextPostRequest:
            type: object
            required:
              - text
            properties:
                text:
                    $ref: '#/components/schemas/NotEmptyString'

        TaskEvaluateRequest:
            type: object
            required:
              - assessment
            properties:
                assessment:
                    type: int

        TaskFeedbackRequest:
            type: object
            required:
              - feedback
            properties:
                feedback:
                    $ref: '#/components/schemas/NotEmptyString'