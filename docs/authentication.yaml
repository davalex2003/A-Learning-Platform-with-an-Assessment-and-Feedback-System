openapi: 3.1.0

info:
    title: Learning Platform Authentication
    description: HTTP endpoints for authentication
    version: '1.0'

paths:
    /user/register:
        post:
            description: Регистрация пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserRegisterRequest'
            responses:
                201:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserRegisterResponse201'
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserRegisterResponse400'

    /user/authorize:
        post:
            description: Авторизация пользователя
            parameters:
              - $ref: '#/components/parameters/OrganizationID'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAuthorizeRequest'
            responses:
                200:
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAuthorizeResponse200'
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAuthorizeResponse400' 
                404:
                    description: Пользователь не найден                         

    /user/email/send_verification_code:
        post:
            description: Отправить код на email
            parameters:
              - $ref: '#/components/parameters/Email'
            responses:
                200:
                    description: OK
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserEmailSendVerificationCodeResponse400'

    /user/email/verify:
        post:
            description: Подтвердить email
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserEmailVerifyRequest'
            responses:
                200:
                    description: OK
                400:
                    description: Некорректные параметры запроса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserEmailSendVerificationCodeResponse400'

components:
    parameters:
        OrganizationID:
            in: query
            name: organization_id
            description: ID организации
            required: true
            schema:
                type: string
                minLength: 1
        Email:
            in: query
            name: email
            description: Электронная почта
            required: true
            schema:
                type: string
                minLength: 1     

    schemas:
        FullName:
            type: object
            required:
              - first_name
              - second_name
            properties:
                first_name:
                    description: Имя
                    type: string
                    minLength: 1
                second_name:
                    description: Фамилия
                    type: string
                    minLength: 1
                middle_name:
                    description: Отчество
                    type: string
                    minLength: 1
        
        Token:
            type: object
            required:
              - token
            properties:
                token:
                    type: string
                    minLength: 1

        UserRegisterRequest:
            type: object
            required:
              - email
              - password
              - full_name
            properties:            
                email:
                    type: string
                    minLength: 1
                password:
                    type: string
                    minLength: 8
                full_name:
                    $ref: '#/components/schemas/FullName'
        
        UserRegisterResponse201:
            $ref: '#/components/schemas/Token'

        UserRegisterResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_exists
                      - invalid_email
                      - invalid_password
                      - invalid_first_name
                      - invalid_second_name
                      - invalid_middle_name

        UserAuthorizeRequest:
            type: object
            required:
              - email
              - password
            properties:            
                email:
                    type: string
                    minLength: 1
                password:
                    type: string
                    minLength: 8
        
        UserAuthorizeResponse200:
            $ref: '#/components/schemas/Token'

        UserAuthorizeResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - invalid_email
                      - invalid_password
                      - wrong_password
        
        UserEmailSendVerificationCodeResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_has_verified_email
                      - invalid_email
        
        UserEmailVerifyRequest:
            type: object
            required:
              - token
              - code
            properties:
                token:
                    $ref: '#/components/schemas/Token'
                code:
                    type: string
                    minLength: 6
                    maxLength: 6

        UserEmailVerifyResponse400:
            type: object
            required:
              - code
            properties:
                code:
                    type: string
                    enum:
                      - user_already_has_verified_email
                      - invalid_token
                      - invalid_code